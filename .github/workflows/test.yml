name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  unit-and-integration-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: 'app/pnpm-lock.yaml'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: |
          cd app
          pnpm install

      - name: Run unit and integration tests
        run: |
          cd app
          pnpm test

      - name: Generate coverage report
        run: |
          cd app
          pnpm test:coverage

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: app/coverage/

  e2e-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: 'app/pnpm-lock.yaml'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: |
          cd app
          pnpm install

      - name: Install Playwright browsers
        run: |
          cd app
          pnpm playwright install --with-deps

      - name: Run e2e tests
        run: |
          cd app
          pnpm test:e2e

      - name: Upload Playwright report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: app/playwright-report/
          retention-days: 30

  build-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: 'app/pnpm-lock.yaml'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: |
          cd app
          pnpm install

      - name: Build application
        run: |
          cd app
          pnpm build

      - name: Check build output
        run: |
          cd app
          ls -la dist
          if [ ! -f dist/index.html ]; then
            echo "index.html not found in dist directory"
            exit 1
          fi
